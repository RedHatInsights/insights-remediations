---
apiVersion: v1
kind: Template
metadata:
  name: remediations
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: remediations
  spec:
    envName: ${ENV_NAME}
    dependencies:
    - rbac
    - host-inventory
    optionalDependencies:
    - compliance
    - compliance-ssg
    - config-manager
    - cloud-connector
    # add MQTT mock (mosquitto) from cloud-connector
    - mosquitto
    - patchman
    - playbook-dispatcher
    - sources-api
    - vmaas
    - vulnerability-engine
    database:
      name: remediations
      version: 14
    inMemoryDb: true
    deployments:
    - name: api
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: true
          apiPath: remediations
      podSpec:
        image: quay.io/cloudservices/remediations:${IMAGE_TAG}
        initContainers:
          - env:
            - name: INIT_CONTAINER
              value: "True"
            - name: EPH_ENV
              value: ${EPH_ENV}
            - name: PLAYBOOK_DISPATCHER_AUTH
              value: ""
            - name: USERS_AUTH
              value: ""
            inheritEnv: true
            args:
              - /bin/sh
              - -c
              - ${MIGRATION_COMMAND}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8000
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        env:
          - name: ADVISOR_IMPL
            value: ${ADVISOR_IMPL}
          - name: ADVISOR_HOST
            value: http://${ADVISOR_HOST}:8000
          - name: BODY_PARSER_LIMIT
            value: ${BODY_PARSER_LIMIT}
          - name: COMPLIANCE_IMPL
            value: ${COMPLIANCE_IMPL}
          - name: COMPLIANCE_HOST
            value: http://${COMPLIANCE_HOST}:3000
          - name: CONTENT_SERVER_HOST
            value: http://${ADVISOR_HOST}:8000
          - name: CONFIG_MANAGER_IMPL
            value: ${CONFIG_MANAGER_IMPL}
          - name: CONFIG_MANAGER_PORT
            value: ${CONFIG_MANAGER_PORT}
          - name: CONFIG_MANAGER_HOST
            value: http://${CONFIG_MANAGER_HOST}:${CONFIG_MANAGER_PORT}
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: DB_CA
            value: /opt/certs/rds-cacert
          - name: DB_SSL_ENABLED
            value: ${DB_SSL_ENABLED}
          - name: FIFI_TEXT_UPDATES
            value: 'true'
          - name: FIFI_TEXT_UPDATE_INTERVAL
            value: '5000'
          - name: FIFI_TEXT_UPDATE_FULL
            value: 'true'
          - name: DEMO_MODE
            value: 'false'
          - name: INVENTORY_IMPL
            value: ${INVENTORY_IMPL}
          - name: INVENTORY_HOST
            value: http://${HOST_INVENTORY_HOST}:${HOST_INVENTORY_PORT}
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: LOG_CW_ENABLED
            value: ${LOG_CW_ENABLED}
          - name: MIGRATION_COMMAND
            value: ${MIGRATION_COMMAND}
          - name: MARKETPLACE_CHECK
            value: ${MARKETPLACE_CHECK}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: PATCHMAN_IMPL
            value: ${PATCHMAN_IMPL}
          - name: PATCHMAN_HOST
            value: http://${PATCHMAN_HOST}:8080
          - name: PLAYBOOK_DISPATCHER_IMPL
            value: ${PLAYBOOK_DISPATCHER_IMPL}
          - name: PLAYBOOK_DISPATCHER_HOST
            value: http://${PLAYBOOK_DISPATCHER_HOST}:8000
          - name: PLAYBOOK_DISPATCHER_AUTH
            valueFrom:
              secretKeyRef:
                key: key
                name: psk-playbook-dispatcher
                optional: true
          - name: PLATFORM_HOSTNAME_URL
            value: ${PLATFORM_HOSTNAME_URL}
          - name: PATH_PREFIX
            value: ${PATH_PREFIX}
          - name: RBAC_IMPL
            value: ${RBAC_IMPL}
          - name: RBAC_HOST
            value: ${RBAC_HOST}
          - name: RBAC_ENFORCE
            value: ${RBAC_ENFORCE}
          - name: RECEPTOR_IMPL
            value: ${RECEPTOR_IMPL}
          - name: RECEPTOR_HOST
            value: http://${RECEPTOR_CONTROLLER_HOST}:9090
          - name: REDIS_ENABLED
            value: 'true'
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PORT
            value: '6379'
          - name: SOURCES_IMPL
            value: ${SOURCES_IMPL}
          - name: SOURCES_PORT
            value: ${SOURCES_PORT}
          - name: SOURCES_HOST
            value: ${SOURCES_HOST}
          - name: SSG_IMPL
            value: ${SSG_IMPL}
          - name: SSG_HOST
            value: ${SSG_HOST}
          - name: TENANT_TRANSLATOR_HOST
            value: ${TENANT_TRANSLATOR_HOST}
          - name: TENANT_TRANSLATOR_PORT
            value: ${TENANT_TRANSLATOR_PORT}
          - name: USERS_IMPL
            value: ${USERS_IMPL}
          - name: USERS_HOST
            value: https://${BACKOFFICE_HOST}
          - name: USERS_INSECURE
            value: ${USERS_INSECURE}
          - name: USERS_AUTH
            valueFrom:
              secretKeyRef:
                key: token
                name: backoffice
                optional: true
          - name: USERS_ENV
            value: ${BACKOFFICE_CLIENT_ENV}
          - name: USERS_TEST_ACCOUNT
            value: ${USERS_TEST_ACCOUNT}
          - name: VULNERABILITIES_IMPL
            value: ${VULNERABILITIES_IMPL}
          - name: VULNERABILITIES_HOST
            value: http://${VULNERABILITIES_HOST}:8443
          - name: XJOIN_SEARCH_URL
            value: http://${XJOIN_SEARCH_HOST}:${XJOIN_SEARCH_PORT}/graphql

- apiVersion: v1
  kind: Secret
  metadata:
    name: backoffice
  data:
    token: ZHVtbXk=
  type: Opaque

- apiVersion: v1
  kind: Secret
  metadata:
    name: psk-playbook-dispatcher
  data:
    key: ZHVtbXk=
  type: Opaque

- apiVersion: metrics.console.redhat.com/v1alpha1
  kind: FloorPlan
  metadata:
    name: remediations
  spec:
    database:
      secretName: ${FLOORIST_DB_SECRET_NAME}
    objectStore:
      secretName: ${FLOORIST_BUCKET_SECRET_NAME}
    logLevel: ${FLOORIST_LOGLEVEL}
    suspend: ${{FLOORIST_SUSPEND}}
    disabled: ${{FLOORIST_DISABLED}}
    queries:
    - prefix: insights/remediations/remediations_counts
      query: >-
        SELECT id as remediations_id,
               name as remediations_name,
               account_number as remediations_account_number,
               tenant_org_id as remediations_tenant_org_id,
               created_by as remediations_created_by,
               updated_by as remediations_updated_by,
               created_at as remediations_created_at,
               updated_at as remediations_updated_at,
               auto_reboot as remediations_auto_reboot,
               archived as remediations_archived
        FROM remediations
        WHERE updated_at >= TIMESTAMP 'yesterday'
          AND updated_at < TIMESTAMP 'today'
        ORDER BY account_number;
    - prefix: insights/remediations/remediation_issues
      query: >-
        SELECT remediation_issues.id,
               remediation_issues.issue_id,
               remediation_issues.remediation_id,
               remediation_issues.resolution
        FROM remediation_issues
        INNER JOIN remediations ON remediation_id = remediations.id
        WHERE remediations.updated_at >= TIMESTAMP 'yesterday'
          AND remediations.updated_at < TIMESTAMP 'today'
        ORDER BY remediation_id;
    - prefix: insights/remediations/remediation_issue_systems
      query: >-
        SELECT remediation_issue_id,
               system_id,
               resolved
        FROM remediation_issue_systems
        INNER JOIN remediation_issues ON remediation_issue_id = remediation_issues.id     
        INNER JOIN remediations ON remediation_issues.remediation_id = remediations.id
        WHERE remediations.updated_at >= TIMESTAMP 'yesterday'
          AND remediations.updated_at < TIMESTAMP 'today'
        ORDER BY remediation_id;
    - prefix: insights/remediations/playbook_runs
      query: >-
        SELECT id,
               status,
               remediation_id,
               created_by,
               created_at,
               updated_at
        FROM playbook_runs
        WHERE updated_at >= TIMESTAMP 'yesterday'
          AND updated_at < TIMESTAMP 'today'
        ORDER BY remediation_id;
    - prefix: insights/remediations/playbook_run_executors
      query: >-
        SELECT playbook_runs.remediation_id,
               playbook_run_executors.id,
               playbook_run_executors.executor_id,
               playbook_run_executors.executor_name,
               playbook_run_executors.status,
               playbook_run_executors.playbook_run_id,
               playbook_run_executors.updated_at
        FROM playbook_run_executors
        INNER JOIN playbook_runs ON playbook_run_id = playbook_runs.id 
        WHERE playbook_run_executors.updated_at >= TIMESTAMP 'yesterday'
          AND playbook_run_executors.updated_at < TIMESTAMP 'today'
        ORDER BY remediation_id;
    - prefix: insights/remediations/playbook_run_systems
      query: >-
        SELECT playbook_runs.remediation_id,
               playbook_run_systems.id,
               playbook_run_systems.playbook_run_executor_id,
               playbook_run_systems.system_id,
               playbook_run_systems.system_name,
               playbook_run_systems.status,
               playbook_run_systems.updated_at
        FROM playbook_run_systems
        INNER JOIN playbook_run_executors ON playbook_run_executor_id = playbook_run_executors.id
        INNER JOIN playbook_runs ON playbook_run_executors.playbook_run_id = playbook_runs.id 
        WHERE playbook_run_systems.updated_at >= TIMESTAMP 'yesterday'
          AND playbook_run_systems.updated_at < TIMESTAMP 'today'
        ORDER BY remediation_id;

- apiVersion: metrics.console.redhat.com/v1alpha1
  kind: FloorPlan
  metadata:
    name: remediations-hms
  spec:
    database:
      secretName: ${FLOORIST_DB_SECRET_NAME}
    objectStore:
      secretName: ${FLOORIST_HMS_BUCKET_SECRET_NAME}
    logLevel: ${FLOORIST_LOGLEVEL}
    suspend: ${{FLOORIST_SUSPEND}}
    disabled: ${{FLOORIST_DISABLED}}
    queries:
    - prefix: hms_analytics/remediations/remediations
      chunksize: 50000
      query: >-
        SELECT r.id,
               r.tenant_org_id as org_id,
               r.created_at,
               r.updated_at,
               r.auto_reboot,
               r.archived,
               ri.issue_id::TEXT,
               ris.system_id::TEXT,
               ris.resolved
        FROM remediations AS r
        LEFT JOIN remediation_issues AS ri ON ri.remediation_id = r.id
        LEFT JOIN remediation_issue_systems AS ris ON ris.remediation_issue_id = ri.id
        WHERE r.updated_at > (CURRENT_DATE - INTERVAL '30 days');
    - prefix: hms_analytics/remediations/playbook_runs
      chunksize: 200000
      query: >-
        SELECT pr.id,
               pr.remediation_id::TEXT,
               r.tenant_org_id as org_id,
               pr.status,
               pr.created_at,
               pr.updated_at,
               ri.issue_id::TEXT
        FROM playbook_runs AS pr
        LEFT JOIN remediations AS r ON r.id = pr.remediation_id
        LEFT JOIN remediation_issues AS ri ON ri.remediation_id = r.id
        WHERE pr.updated_at > (CURRENT_DATE - INTERVAL '30 days');
    - prefix: hms_analytics/remediations/playbook_archives
      chunksize: 300000
      query: >-
        SELECT id,
               tenant_org_id AS org_id,
               created_at
        FROM playbook_archive
        WHERE created_at > (CURRENT_DATE - INTERVAL '30 days');

parameters:
- name: ADVISOR_IMPL
  value: impl
- name: ADVISOR_HOST
- name: BODY_PARSER_LIMIT
- name: BACKOFFICE_CLIENT_ENV
- name: BACKOFFICE_HOST
- name: COMPLIANCE_IMPL
  value: impl
- name: COMPLIANCE_HOST
- name: CONFIG_MANAGER_IMPL
  value: impl
- name: CONFIG_MANAGER_PORT
  value: ${CONFIG_MANAGER_PORT}
- name: CONFIG_MANAGER_HOST
  value: ${CONFIG_MANAGER_HOST}
- name: CLOWDER_ENABLED
  value: 'true'
- name: DB_CA
  value: /opt/certs/rds-cacert
- name: DB_SSL_ENABLED
  value: ${DB_SSL_ENABLED}
- name: ENV_NAME
- name: FIFI_TEXT_UPDATES
  value: 'true'
- name: FIFI_TEXT_UPDATE_INTERVAL
  value: '5000'
- name: FIFI_TEXT_UPDATE_FULL
  value: 'true'
- name: DEMO_MODE
  value: 'false'
- name: IMAGE_TAG
  required: true
- name: INVENTORY_IMPL
  value: impl
- name: HOST_INVENTORY_HOST
- name: HOST_INVENTORY_PORT
- name: LOG_LEVEL
- name: LOG_CW_ENABLED
  value: ${LOG_CW_ENABLED}
- name: MARKETPLACE_CHECK
  value: 'true'
- name: MIGRATION_COMMAND
- name: PATCHMAN_IMPL
  value: impl
- name: PATCHMAN_HOST
- name: PLAYBOOK_DISPATCHER_IMPL
  value: impl
- name: PLAYBOOK_DISPATCHER_HOST
- name: PLATFORM_HOSTNAME_URL
  value: ${PLATFORM_HOSTNAME_URL}
- name: PATH_PREFIX
  value: ${PATH_PREFIX}
- name: RBAC_IMPL
  value: impl
- name: RBAC_HOST
- name: RBAC_ENFORCE
  value: 'true'
- name: RECEPTOR_IMPL
  value: impl
- name: RECEPTOR_CONTROLLER_HOST
- name: REDIS_ENABLED
  value: 'true'
- name: REDIS_HOST
  value: redis
- name: REDIS_PORT
  value: '6379'
- name: SOURCES_IMPL
  value: impl
- name: SOURCES_PORT
- name: SOURCES_HOST
- name: SSG_IMPL
  value: impl
- name: SSG_HOST
- name: TENANT_TRANSLATOR_HOST
- name: TENANT_TRANSLATOR_PORT
- name: USERS_IMPL
  value: impl
- name: USERS_INSECURE
  value: 'false'
- name: USERS_TEST_ACCOUNT
  value: 'authUser'
- name: VULNERABILITIES_IMPL
  value: impl
- name: VULNERABILITIES_HOST
- name: XJOIN_SEARCH_HOST
- name: XJOIN_SEARCH_PORT
- name: MIN_REPLICAS
  description: Replica count for api service
  value: "2"
- name: FLOORIST_SUSPEND
  description: Disable Floorist cronjob execution
  required: true
  value: 'true'
- name: FLOORIST_DISABLED
  description: Determines whether to build the Floorist Job.
  value: 'false'
- name: FLOORIST_BUCKET_SECRET_NAME
  description: bucket secret name
  required: true
  value: dummy-secret
- name: FLOORIST_HMS_BUCKET_SECRET_NAME
  description: HMS bucket secret name
  value: floorist-bucket
- name: FLOORIST_LOGLEVEL
  description: Floorist loglevel config
  value: 'INFO'
- name: FLOORIST_DB_SECRET_NAME
  description: database secret name
  value: remediations-db
