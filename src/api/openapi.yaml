---
openapi: 3.0.0

info:
  title: Insights Remediations
  description: Insights Remediations Service
  version: 1.5.0
  contact:
    email: rewhite@redhat.com

servers:
  - url: https://console.redhat.com/api/remediations/v1
    description: production server
  - url: /api/remediations/v1
    description: relative path

tags:
  - name: diagnosis
    description: Host-specific detailed diagnosis information
  - name: generator
    description: Ansible Playbook Generator
  - name: remediations
    description: Ansible Playbook Builder
  - name: resolutions
    description: Information about available Ansible resolutions

paths:
  /remediations:
    get:
      tags:
        - remediations
      summary: List Remediations
      description: Provides information about Remediations, RBAC permission {remediations:remediation:read}
      operationId: getRemediations
      parameters:
        - $ref: '#/components/parameters/RemediationSort'
        - $ref: '#/components/parameters/RemediationFilter'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/RemediationSystem'
        - $ref: '#/components/parameters/HideArchived'
        - $ref: '#/components/parameters/Fields'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/RemediationNameList'
                  - $ref: '#/components/schemas/RemediationList'
        400:
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - remediations
      summary: Create Remediation
      description: Creates a new Remediation based on given information, RBAC permission {remediations:remediation:write}
      operationId: createRemediation
      requestBody:
        $ref: '#/components/requestBodies/RemediationInput'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationCreated'
        400:
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - remediations
      summary: Bulk Delete Remediations
      description: Removes the given list of Remediations.  Requests
        containing malformed remediation IDs are rejected.  Duplicate or missing
        IDs are ignored.

        RBAC permission {remediations:remediation:write}
      operationId: deleteRemediations
      requestBody:
        $ref: '#/components/requestBodies/RemediationsList'
      responses:
        200:
          $ref: '#/components/responses/MultipleDelete'

  /remediations/download:
    get:
      tags:
        - remediations
      summary: Download Remediations
      description: Downloads a zip file containing selected Remediations, RBAC permission {remediations:remediation:read}
      operationId: downloadPlaybooks
      parameters:
        - $ref: '#/components/parameters/SelectedRemediations'
      responses:
        200:
          description: OK
          content:
            application/zip:
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /remediations/{id}:
    get:
      tags:
        - remediations
      summary: Get Remediation
      description: Provides information about the given Remediation, RBAC permission {remediations:remediation:read}
      operationId: getRemediation
      parameters:
        - $ref: '#/components/parameters/RemediationId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - remediations
      summary: Update Remediation
      description: Updates the given Remediation, RBAC permission {remediations:remediation:write}
      operationId: updateRemediation
      parameters:
        - $ref: '#/components/parameters/RemediationId'
      requestBody:
        $ref: '#/components/requestBodies/RemediationInput'
      responses:
        200:
          description: OK
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - remediations
      summary: Remove Remediation
      description: Removes the given Remediation, RBAC permission {remediations:remediation:write}
      operationId: deleteRemediation
      parameters:
        - $ref: '#/components/parameters/RemediationId'
      responses:
        204:
          $ref: '#/components/responses/Deleted'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/executable:
    get:
      tags:
        - remediations
      summary: Check smart_managment systems
      description: Checks remediation for the existence of smart_managment flaged systems
      operationId: checkExecutable
      parameters:
        - $ref: '#/components/parameters/RemediationId'
      responses:
        200:
          description: OK
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/playbook:
    get:
      tags:
        - remediations
      summary: Get Remediation Playbook
      description: Provides Ansible Playbook, RBAC permission {remediations:remediation:read}
      operationId: getRemediationPlaybook
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/SelectedHosts'
        - $ref: '#/components/parameters/SatOrgId'
        - $ref: '#/components/parameters/LocalHost'
      responses:
        200:
          description: OK
          content:
            text/vnd.yaml:
              schema:
                type: string
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - remediations
      summary: Fetch Remediation Plan Playbook
      description: Fetch Ansible Playbook - for use with large list of target systems, RBAC permission {remediations:remediation:read}
      operationId: bulkGetRemediationPlaybook
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/SatOrgId'
        - $ref: '#/components/parameters/LocalHost'
      requestBody:
        $ref: '#/components/requestBodies/PlaybookSystems'
      responses:
        200:
          description: OK
          content:
            text/vnd.yaml:
              schema:
                type: string
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/issues/{issue}:
    patch:
      tags:
        - remediations
      summary: Update Remediation Issue
      description: Updates the given Remediation Issue, RBAC permission {remediations:remediation:write}
      operationId: updateRemediationIssue
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/IssueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemediationIssueIn'
      responses:
        200:
          description: OK
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - remediations
      summary: Remove Remediation Issue
      description: Removes the given Issue from the Remediation, RBAC permission {remediations:remediation:write}
      operationId: deleteRemediationIssue
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/IssueId'
      responses:
        204:
          $ref: '#/components/responses/Deleted'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/issues/{issue}/systems:
    get:
      tags:
        - remediations
      summary: Get Remediation Issue Systems
      description: Get a paginated list of systems from a given issue, RBAC permission {remediations:remediation:read}
      operationId: getRemediationIssueSystems
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/IssueId'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/IssueSystemsSort'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationIssueSystemList'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/issues/{issue}/systems/{system}:
    delete:
      tags:
        - remediations
      summary: Remove Remediation Issue System
      description: Removes the given System from the Issue Remediation, RBAC permission {remediations:remediation:write}
      operationId: deleteRemediationIssueSystem
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/IssueId'
        - $ref: '#/components/parameters/SystemId'
      responses:
        204:
          $ref: '#/components/responses/Deleted'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/connection_status:
    get:
      tags:
        - remediations
      summary: Pre-flight check
      description: |
        Get connection status for remediation plan targets, RBAC permission {remediations:remediation:execute}
        
        Returns an array of the following objects:
        
        - One object for all systems belonging to a unique satellite organization
        - One object for all direct-connected systems in each of the status categories:
        
          - connected
          - disconnected
          - no_rhc

      operationId: getRemediationConnectionStatus
      parameters:
        - $ref: '#/components/parameters/RemediationId'
      responses:
        '200':
          description: |
            OK
            
            connection_status is one of:
            
            - connected
            - disconnected
            - no_rhc (system not registered to RHC)

            executor_type is one of:
            
            - RHC-satellite
            - RHC
            - None
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationConnectionStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/playbook_runs:
    get:
      tags:
        - remediations
      summary: List of executions of this remediation
      description: List of executions of this remediation
      operationId: listPlaybookRuns
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/PlaybookRunSort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookRunsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - remediations
      summary: Execute remediation
      description: Execute remediation, RBAC permission {remediations:remediation:execute}
      operationId: runRemediation
      parameters:
        - $ref: '#/components/parameters/RemediationId'
      requestBody:
        $ref: '#/components/requestBodies/PlaybookRunsInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteRemediation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoExecutors'

  /remediations/{id}/playbook_runs/{playbook_run_id}:
    get:
      tags:
        - remediations
      summary: Get details on execution of the remediation
      description: Get details on execution of the remediation
      operationId: getPlaybookRunDetails
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/PlaybookRunId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookRunExecutorDetails'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/playbook_runs/{playbook_run_id}/cancel:
    post:
      tags:
        - remediations
      summary: Cancel execution of the remediation
      description: Cancel execution of the remediation
      operationId: cancelPlaybookRuns
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/PlaybookRunId'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/playbook_runs/{playbook_run_id}/systems:
    get:
      tags:
        - remediations
      summary: Get details on systems being executed on in specific playbook run
      description: Get details on systems being executed on in specific playbook run
      operationId: getPlaybookRunSystems
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/PlaybookRunId'
        - $ref: '#/components/parameters/ExecutorId'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/SystemName'
        - $ref: '#/components/parameters/PlaybookRunSystemSort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookRunSystemList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /remediations/{id}/playbook_runs/{playbook_run_id}/systems/{system}:
    get:
      tags:
        - remediations
      summary: Get details and updated log of system being executed on in specific playbook run
      description: Get details and updated log of system being executed on in specific playbook run
      operationId: getPlaybookRunSystemDetails
      parameters:
        - $ref: '#/components/parameters/RemediationId'
        - $ref: '#/components/parameters/PlaybookRunId'
        - $ref: '#/components/parameters/SystemId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookRunSystemDetails'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: RemediationId, PlaybookRunId, or SystemId not available.

  /resolutions/{issue}:
    get:
      tags:
        - resolutions
      summary: Resolution metadata
      description: Provides information about resolutions available for the given issue
      operationId: getResolutionsForIssue
      parameters:
        - $ref: '#/components/parameters/IssueId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resolutions'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          description: Issue not known or Ansible resolution not available

  /resolutions:
    post:
      tags:
        - resolutions
      summary: Resolution metadata (batch)
      description: Provides information about resolutions available for the given issues
      operationId: getResolutionsForIssues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolutionsBatchInput'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolutionsBatch'
        400:
          $ref: '#/components/responses/BadRequest'

  /diagnosis/{system}:
    get:
      tags:
        - diagnosis
      summary: host-specific diagnosis
      description: Provides host-specific diagnosis information
      operationId: getDiagnosis
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - $ref: '#/components/parameters/RemediationIdQuery'
        - $ref: '#/components/parameters/BranchId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          description: System not found

  /playbook:
    post:
      tags:
        - generator
      summary: Generate an Ansible Playbook
      description: Generates an Ansible Playbook based on input parameters
      operationId: generate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybookDefinition'
      responses:
        200:
          description: OK
          content:
            text/vnd.yaml:
              schema:
                type: string
        400:
          $ref: '#/components/responses/BadRequest'

  /version:
    get:
      tags:
        - version
      summary: Get service version
      description: Provides information about the version of the service
      operationId: getVersion
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [version, commit]
                additionalProperties: false
                properties:
                  version:
                    type: string
                    example: '1.0.0'
                  commit:
                    type: string
                    example: '8b87342'

components:
  parameters:
    Limit:
      in: query
      name: limit
      description: Maximum number of results to return
      required: false
      schema:
        type: number
        minimum: 1
        maximum: 200
        default: 50
    Offset:
      in: query
      name: offset
      description: Indicates the starting position of the query relative to the complete set of items that match the query
      required: false
      schema:
        type: number
        minimum: 0
        default: 0
    IssueId:
      in: path
      name: issue
      description: Issue identifier (e.g. `advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074`)
      required: true
      schema:
        $ref: '#/components/schemas/IssueId'
    RemediationId:
      in: path
      name: id
      description: Remediation identifier
      required: true
      schema:
        $ref: '#/components/schemas/RemediationId'
    RemediationIdQuery:
      in: query
      name: remediation
      description: Remediation identifier (uuid)
      required: false
      schema:
        $ref: '#/components/schemas/RemediationId'
    RemediationSort:
      in: query
      name: sort
      description: Sort order
      required: false
      schema:
        type: string
        enum: [updated_at, -updated_at, name, -name, system_count, -system_count, issue_count, -issue_count]
        default: -updated_at
    RemediationSystem:
      in: query
      name: system
      description: System identifier. If specified only remediations that involve the given system will be returned.
      required: false
      schema:
        type: string
        format: uuid
    RemediationFilter:
      in: query
      name: filter
      description: Remediation name filter. If specified only remediations whose name matches the given string will be returned.
      required: false
      schema:
        type: string
    SystemId:
      in: path
      name: system
      description: System identifier
      required: true
      schema:
        $ref: '#/components/schemas/SystemId'
    PlaybookRunId:
      in: path
      name: playbook_run_id
      description: 'Playbook run identifier (UUID)'
      required: true
      schema:
        $ref: '#/components/schemas/PlaybookRunId'
    PlaybookRunSort:
      in: query
      name: sort
      description: Sort Order for Playbook Run
      required: false
      schema:
        type: string
        enum: [updated_at, -updated_at]
        default: -updated_at
    ExecutorId:
      in: query
      name: executor
      description: 'Playbook run executor identifier (UUID)'
      required: false
      schema:
        $ref: '#/components/schemas/ExecutorId'
    HideArchived:
      in: query
      name: hide_archived
      description: 'Hide archived playbooks'
      required: false
      schema:
        type: boolean
        default: false
    Fields:
      in: query
      name: fields[data]
      description: |
        Include specified items
        - name: list all remediation plan names in organization (cannot be combined with other fields)
        - playbook_runs: include playbook run data in the response
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - name
            - playbook_runs
    SelectedHosts:
      in: query
      name: hosts
      description: 'Selected hosts to be included in playbook'
      required: false
      schema:
        type: array
        items:
          type: string
    LocalHost:
      in: query
      name: localhost
      description: 'Flag for localhost playbook generation'
      required: false
      schema:
        type: boolean
        default: false

    SelectedRemediations:
      in: query
      name: selected_remediations
      description: 'Selected Remediations for download'
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/RemediationId'
    BranchId:
      in: query
      name: branch_id
      description: 'Branch ID passed by satellite'
      required: false
      schema:
        type: string
        format: uuid
    SatOrgId:
      in: query
      name: sat_org
      description: 'Organization ID passed by satellite'
      required: false
      schema:
        type: string

    IssueSystemsSort:
      in: query
      name: sort
      description: Sort order
      required: false
      schema:
        type: string
        enum: [display_name, -display_name]
        default: display_name
    SystemName:
      in: query
      name: ansible_host
      description: 'System Name (STRING)'
      required: false
      schema:
        $ref: '#/components/schemas/SystemName'
    PlaybookRunSystemSort:
      in: query
      name: sort
      description: Playbook run systems sort order by ASC or DESC
      required: false
      schema:
        type: string
        enum: [system_name, -system_name]
        default: system_name


  requestBodies:
    RemediationInput:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemediationInput'
    RemediationsList:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemediationsList'
    PlaybookRunsInput:
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlaybookRunsInput'
    PlaybookSystems:
      required: true
      description: Array of system inventory identifiers.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemList'

  schemas:
    #
    # Primitive types
    #
    DateTime:
      type: string
      format: date-time
      example: '2018-12-05T08:19:36.641Z'

    InsightsId:
      type: string
      format: uuid
      example: a8799a02-8be9-11e8-9eb6-529269fb1459

    IssueId:
      type: string
      pattern: ^(advisor|vulnerabilities|ssg|test|patch-advisory|patch-package):[\w\d_|:\.+-]+$
      example: advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074

    RemediationAutoReboot:
      type: boolean
      description: >
        Indicates whether systems that require reboot for the remediation to be properly applied should be
        rebooted automatically or not


    RemediationId:
      type: string
      format: uuid
      example: 9197ba55-0abc-4028-9bbe-269e530f8bd5

    Playbook:
      type: string
      description: Playbook created for the playbook run executor.

    ExecutorId:
      type: string
      format: uuid
      example: 9197ba55-0abc-4028-9bbe-269e530f8bd5

    ExecutorName:
      type: string
      example: Executor Name

    RemediationName:
      type: string
      nullable: false
      pattern: ^(?!\s).+(?<!\s)$  # can't start or end with whitespace
      example: Fix Critical CVEs

    RemediationArchived:
      type: boolean
      description: Indicates whether a remediation has been marked as archived

    SystemName:
      type: string
      example: redhat-213

    SystemLog:
      type: string
      description: Current formatted system log from playbook run system.

    RemediationNeedsReboot:
      type: boolean
      description: Indicates whether any of the issues contained in the remediation require system reboot

    PlaybookRunStatus:
      type: string
      example: "pending"
      enum: ["pending", "running", "success", "failure", "canceled"]

    PlaybookRunExecutorStatus:
      type: string
      example: "pending"
      enum: ["pending", "acked", "running", "success", "failure", "canceled"]

    PlaybookRunSystemStatus:
      type: string
      example: "pending"
      enum: ["pending", "running", "success", "failure", "canceled"]

    PlaybookRunId:
      type: string
      format: uuid
      example: a8799a02-8be9-11e8-9eb6-529269fb1459

    PlaybookRunExecutorId:
      type: string
      format: uuid
      example: b6279a02-8be9-11e8-9eb6-529269fb1459

    ResolutionNeedsReboot:
      type: boolean
      description: Indicates whether the given resolution involves system reboot

    ResolutionRisk:
      type: integer
      enum:
        - -1
        - 1
        - 2
        - 3
        - 4
      example: 2

    ResolutionType:
      type: string
      example: fix

    SystemId:
      type: string
      format: uuid
      example: a8799a02-8be9-11e8-9eb6-529269fb1459

    ResolvedCount:
      type: integer
      example: 27


    #
    # Input schemas
    #
    PlaybookDefinition:
      type: object
      additionalProperties: false
      required: [issues]
      properties:
        issues:
          type: array
          minItems: 1
          example:
            - id: advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE
              systems:
                - a8799a02-8be9-11e8-9eb6-529269fb1459
                - 736ef48c-8f05-11e8-9eb6-529269fb1459
            - id: advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074
              systems:
                - a8799a02-8be9-11e8-9eb6-529269fb1459
                - 736ef48c-8f05-11e8-9eb6-529269fb1459
              resolution: mitigate
            - id: ssg:rhel7|standard|xccdf_org.ssgproject.content_rule_service_autofs_disabled
              systems:
                - a8799a02-8be9-11e8-9eb6-529269fb1459
                - 736ef48c-8f05-11e8-9eb6-529269fb1459
            - id: vulnerabilities:CVE-2017-15126
              systems:
                - a8799a02-8be9-11e8-9eb6-529269fb1459
                - 736ef48c-8f05-11e8-9eb6-529269fb1459
            - id: vulnerabilities:CVE-2018-1087
              systems:
                - a8799a02-8be9-11e8-9eb6-529269fb1459
                - 736ef48c-8f05-11e8-9eb6-529269fb1459
            - id: vulnerabilities:CVE-2016-7913
              systems:
                - a8799a02-8be9-11e8-9eb6-529269fb1459
                - 736ef48c-8f05-11e8-9eb6-529269fb1459
          items:
            type: object
            additionalProperties: false
            required: [id, systems]
            properties:
              id:
                $ref: '#/components/schemas/IssueId'
              systems:
                type: array
                minItems: 1
                items:
                  $ref: '#/components/schemas/SystemId'
              resolution:
                $ref: '#/components/schemas/ResolutionType'
        auto_reboot:
          $ref: '#/components/schemas/RemediationAutoReboot'

    ResolutionsBatchInput:
      type: object
      additionalProperties: false
      required: [issues]
      properties:
        issues:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/IssueId'
      example:
        issues:
          - vulnerabilities:CVE-2018-1087
          - advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074377300
          - advisor:non-existent-issue

    RemediationInput:
      type: object
      additionalProperties: false
      x-remediations-strict: false  # suppress validation since none of the properties is required
      properties:
        name:
          $ref: '#/components/schemas/RemediationName'
        archived:
          $ref: '#/components/schemas/RemediationArchived'
        auto_reboot:
          $ref: '#/components/schemas/RemediationAutoReboot'
        add:
          type: object
          additionalProperties: false
          required: [issues]
          properties:
            issues:
              type: array
              minItems: 1
              items:
                type: object
                additionalProperties: false
                required: [id]
                properties:
                  id:
                    $ref: '#/components/schemas/IssueId'
                  resolution:
                    $ref: '#/components/schemas/ResolutionType'
                  systems:
                    type: array
                    items:
                      $ref: '#/components/schemas/SystemId'
            systems:
              type: array
              items:
                $ref: '#/components/schemas/SystemId'
          example:
            issues:
              - id: advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074
                resolution: mitigate
                systems:
                  - a8799a02-8be9-11e8-9eb6-529269fb1459

    RemediationsList:
      type: object
      additionalProperties: false
      required:
        - remediation_ids
      properties:
        remediation_ids:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/RemediationId'
          example:
            - 9197ba55-0abc-4028-9bbe-269e530f8bd5
            - 3df5ed22-4324-402c-b128-ea62debbde6c

    SystemList:
      type: array
      items:
        $ref: '#/components/schemas/SystemId'

    RemediationIssueIn:
      type: object
      additionalProperties: false
      required: [resolution]
      properties:
        resolution:
          $ref: '#/components/schemas/ResolutionType'

    PlaybookRunsInput:
      type: object
      x-remediations-strict: false
      properties:
        exclude:
          type: array
          items:
            type: string
            example: 9197ba55-0abc-4028-9bbe-269e530f8bd5 or "RHC"


    #
    # Output schemas
    #
    RequestError:
      type: object
      additionalProperties: false
      required: [errors]
      properties:
        errors:
          type: array
          items:
            type: object
            additionalProperties: false
            required: [id, status, code, title]
            properties:
              id:
                type: string
              status:
                type: integer
                example: 400
              code:
                type: string
                example: UNKNOWN_SYSTEM
              title:
                type: string
                example: Unknown system identifier 'abcd'
              details:
                type: object

    Meta:
      type: object
      additionalProperties: false
      required: [count, total]
      properties:
        count:
          type: number
          description: number of results returned
          example: 50
        total:
          type: number
          description: total number of results matching the query
          example: 114

    RemediationIssueSystemList:
      type: object
      additionalProperties: false
      required: [data, meta]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SystemOut'
        meta:
          $ref: '#/components/schemas/Meta'

    ExecuteRemediation:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          example: a8799a02-8be9-11e8-9eb6-529269fb1459

    NoExecutors:
      type: object
      additionalProperties: false
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            additionalProperties: false
            required:
              - id
            properties:
              id:
                type: string
                example: a8799a02-8be9-11e8-9eb6-529269fb1459
              status:
                type: integer
                example: 422
              code:
                type: string
                example: NO_EXECUTORS
              title:
                type: string
                example: No executors available for Playbook "FiFI playbook 6" (64d92aeb-9351-4216-8d7c-044d171337bd)

    PlaybookRunsList:
      type: object
      additionalProperties: false
      required: [data, meta]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PlaybookRunDetails'
        meta:
          $ref: '#/components/schemas/Meta'

    Counts:
      type: object
      additionalProperties: false
      required: [pending, running, success, failure, canceled]
      properties:
        pending:
          type: integer
        running:
          type: integer
        success:
          type: integer
        failure:
          type: integer
        canceled:
          type: integer

    PlaybookRunSystemList:
      type: object
      additionalProperties: false
      required: [data, meta]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PlaybookRunSystems'
        meta:
          $ref: '#/components/schemas/Meta'

    ExecutorList:
      type: array
      items:
        $ref: '#/components/schemas/PlaybookExecutors'

    ExecutorDetails:
      type: array
      items:
        $ref: '#/components/schemas/PlaybookExecutorDetails'

    PlaybookRunExecutorDetails:
      type: object
      additionalProperties: false
      required:
        - executors
        - remediation_id
        - created_by
        - created_at
        - updated_at
        - status
      properties:
        id:
          $ref: '#/components/schemas/PlaybookRunId'
        executors:
          $ref: '#/components/schemas/ExecutorDetails'
        remediation_id:
          $ref: '#/components/schemas/RemediationId'
        created_by:
          $ref: '#/components/schemas/UserOut'
        created_at:
          $ref: '#/components/schemas/DateTime'
        updated_at:
          $ref: '#/components/schemas/DateTime'
        status:
          $ref: '#/components/schemas/PlaybookRunStatus'

    PlaybookRunDetails:
      type: object
      additionalProperties: false
      required:
        - id
        - executors
        - remediation_id
        - created_by
        - created_at
        - updated_at
        - status
      properties:
        id:
          $ref: '#/components/schemas/PlaybookRunId'
        executors:
          $ref: '#/components/schemas/ExecutorList'
        remediation_id:
          $ref: '#/components/schemas/RemediationId'
        created_by:
          $ref: '#/components/schemas/UserOut'
        created_at:
          $ref: '#/components/schemas/DateTime'
        updated_at:
          $ref: '#/components/schemas/DateTime'
        status:
          $ref: '#/components/schemas/PlaybookRunStatus'

    PlaybookRunSystems:
      type: object
      additionalProperties: false
      required:
        - system_id
        - system_name
        - status
        - updated_at
        - playbook_run_executor_id
      properties:
        system_id:
          $ref: '#/components/schemas/SystemId'
        system_name:
          $ref: '#/components/schemas/SystemName'
        status:
          $ref: '#/components/schemas/PlaybookRunSystemStatus'
        updated_at:
          $ref: '#/components/schemas/DateTime'
        playbook_run_executor_id:
          $ref: '#/components/schemas/PlaybookRunId'

    PlaybookRunSystemDetails:
      type: object
      additionalProperties: false
      required:
        - system_id
        - system_name
        - status
        - console
        - playbook_run_executor_id
        - updated_at
      properties:
        system_id:
          $ref: '#/components/schemas/SystemId'
        system_name:
          $ref: '#/components/schemas/SystemName'
        status:
          $ref: '#/components/schemas/PlaybookRunSystemStatus'
        console:
          $ref: '#/components/schemas/SystemLog'
        playbook_run_executor_id:
          $ref: '#/components/schemas/PlaybookRunExecutorId'
        updated_at:
          $ref: '#/components/schemas/DateTime'

    PlaybookExecutors:
      type: object
      additionalProperties: false
      required:
        - executor_id
        - executor_name
        - status
        - system_count
        - counts
      properties:
        executor_id:
          $ref: '#/components/schemas/ExecutorId'
        executor_name:
          $ref: '#/components/schemas/ExecutorName'
        status:
          $ref: '#/components/schemas/PlaybookRunExecutorStatus'
        system_count:
          type: integer
        counts:
          $ref: '#/components/schemas/Counts'

    PlaybookExecutorDetails:
      type: object
      additionalProperties: false
      required:
        - executor_id
        - executor_name
        - updated_at
        - playbook
        - playbook_run_id
        - system_count
        - status
      properties:
        executor_id:
          $ref: '#/components/schemas/ExecutorId'
        executor_name:
          $ref: '#/components/schemas/ExecutorName'
        updated_at:
          $ref: '#/components/schemas/DateTime'
        playbook:
          $ref: '#/components/schemas/Playbook'
        playbook_run_id:
          $ref: '#/components/schemas/PlaybookRunId'
        system_count:
          type: integer
        counts:
          $ref: '#/components/schemas/Counts'
        status:
          $ref: '#/components/schemas/PlaybookRunExecutorStatus'

    # Resolution specific types
    Resolutions:
      type: object
      additionalProperties: false
      required: [id, resolution_risk, resolutions]
      properties:
        id:
          $ref: '#/components/schemas/IssueId'
        resolution_risk:
          $ref: '#/components/schemas/ResolutionRisk'
        resolutions:
          type: array
          items:
            type: object
            additionalProperties: false
            required: [id, description, needs_reboot, resolution_risk]
            properties:
              id:
                $ref: '#/components/schemas/ResolutionType'
              description:
                type: string
                example: Disable DCCP kernel module
              needs_reboot:
                $ref: '#/components/schemas/ResolutionNeedsReboot'
              resolution_risk:
                $ref: '#/components/schemas/ResolutionRisk'

    ResolutionsBatch:
      type: object
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/Resolutions'
          - type: boolean
            description: Indicates that the given issue is not supported
            enum: [false]

      example:
        vulnerabilities:CVE-2018-1087:
          id: vulnerabilities:CVE-2018-1087
          resolution_risk: -1
          resolutions:
            - description: Upgrade packages affected by CVE-2018-1087
              id: fix
              needs_reboot: true
              resolution_risk: -1
        advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074:
          id: advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074
          resolution_risk: 3
          resolutions:
            - description: Update system to the latest kernel and reboot
              id: kernel_update
              needs_reboot: true
              resolution_risk: 3
            - description: Disable DCCP kernel module
              id: mitigate
              needs_reboot: true
              resolution_risk: 3
            - description: Make sure SELinux is enabled, enforcing and has selinux-policy-3.13.1-81.el7 or later on RHEL7
              id: selinux_mitigate
              needs_reboot: true
              resolution_risk: 3
        advisor:non-existent-issue: false


    # Remediation specific types
    RemediationCreated:
      type: object
      additionalProperties: false
      required: [id]
      properties:
        id:
          $ref: '#/components/schemas/RemediationId'

    MultipleDelete:
      type: object
      additionalProperties: false
      required:
        - deleted_count
      properties:
        deleted_count:
          type: integer
          description: Count of remediations deleted

    RemediationDetails:
      type: object
      additionalProperties: false
      required: [id, name, needs_reboot, auto_reboot, created_by, created_at, updated_by, updated_at, resolved_count, issues, archived]
      properties:
        id:
          $ref: '#/components/schemas/RemediationId'
        name:
          $ref: '#/components/schemas/RemediationName'
        needs_reboot:
          $ref: '#/components/schemas/RemediationNeedsReboot'
        archived:
          $ref: '#/components/schemas/RemediationArchived'
        auto_reboot:
          $ref: '#/components/schemas/RemediationAutoReboot'
        created_by:
          $ref: '#/components/schemas/UserOut'
        created_at:
          $ref: '#/components/schemas/DateTime'
        updated_by:
          $ref: '#/components/schemas/UserOut'
        updated_at:
          $ref: '#/components/schemas/DateTime'
        resolved_count:
          $ref: '#/components/schemas/ResolvedCount'
        issues:
          type: array
          items:
            $ref: '#/components/schemas/RemediationIssue'

    RemediationIssue:
      type: object
      additionalProperties: false
      required: [id, description, resolution, systems]
      properties:
        id:
          $ref: '#/components/schemas/IssueId'
        description:
          type: string
        resolution:
          type: object
          additionalProperties: false
          required: [id, description, resolution_risk, needs_reboot]
          properties:
            id:
              $ref: '#/components/schemas/ResolutionType'
            description:
              type: string
            resolution_risk:
              $ref: '#/components/schemas/ResolutionRisk'
            needs_reboot:
              $ref: '#/components/schemas/ResolutionNeedsReboot'
        resolutions_available:
          type: number
          description: The total number of available resolutions for this issue
        systems:
          type: array
          items:
            $ref: '#/components/schemas/SystemOut'

    RemediationList:
      type: object
      additionalProperties: false
      required: [data, meta, links]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RemediationListItem'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          type: object
          additionalProperties: false
          required: [first, last, next, previous]
          properties:
            first:
              type: string
              description: relative link to the first page of the query results
            last:
              type: string
              description: relative link to the last page of the query results
            next:
              type: string
              nullable: true
              description: relative link to the next page of the query results (or null if this is the last page)
            previous:
              type: string
              nullable: true
              description: relative link to the previous page of the query results (or null if this is the first page)
          example:
            $ref: '#/components/examples/RemediationLinks'

    RemediationListItem:
      type: object
      additionalProperties: false
      required: [id, name, created_by, created_at, updated_by, updated_at, issue_count, system_count, resolved_count, needs_reboot, archived]
      properties:
        id:
          $ref: '#/components/schemas/RemediationId'
        name:
          $ref: '#/components/schemas/RemediationName'
        created_by:
          $ref: '#/components/schemas/UserOut'
        created_at:
          $ref: '#/components/schemas/DateTime'
        updated_by:
          $ref: '#/components/schemas/UserOut'
        updated_at:
          $ref: '#/components/schemas/DateTime'
        issue_count:
          type: integer
        system_count:
          type: integer
        resolved_count:
          $ref: '#/components/schemas/ResolvedCount'
        needs_reboot:
          $ref: '#/components/schemas/RemediationNeedsReboot'
        archived:
          $ref: '#/components/schemas/RemediationArchived'
        playbook_runs:
          type: array
          items:
            $ref: '#/components/schemas/PlaybookRunDetails'
    
    RemediationNameList:
      type: object
      additionalProperties: false
      required: [data, meta, links]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RemediationNameListItem'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          type: object
          additionalProperties: false
          required: [first, last, next, previous]
          properties:
            first:
              type: string
              description: relative link to the first page of the query results
            last:
              type: string
              description: relative link to the last page of the query results
            next:
              type: string
              nullable: true
              description: relative link to the next page of the query results (or null if this is the last page)
            previous:
              type: string
              nullable: true
              description: relative link to the previous page of the query results (or null if this is the first page)
          example:
            $ref: '#/components/examples/RemediationLinks'

    RemediationNameListItem:
      type: object
      additionalProperties: false
      required: [name]
      properties:
        name:
          $ref: '#/components/schemas/RemediationName'

    RemediationConnectionStatus:
      type: object
      additionalProperties: false
      required:
        - meta
        - data
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PlaybookExecutorStatus'

    PlaybookExecutorStatus:
      type: object
      additionalProperties: false
      required:
        - endpoint_id
        - executor_id
        - executor_type
        - executor_name
        - system_count
        - system_ids
        - connection_status
      properties:
        endpoint_id:
          type: string
          nullable: true
          example: 806
        executor_id:
          type: string
          nullable: true
          example: f1795406-9483-43e2-ac38-44274d93fe7b
        executor_type:
          type: string
          nullable: true
          example: RHC-satellite
        executor_name:
          type: string
          nullable: true
          example: Satellite 11234 Org 1
        system_count:
          type: integer
          example: 1
        system_ids:
          type: array
          items:
            $ref: '#/components/schemas/SystemId'
        connection_status:
          type: string
          example: connected
          enum:
            - connected
            - disconnected
            - no_rhc

    SystemOut:
      type: object
      additionalProperties: false
      required: [id, hostname, display_name]
      properties:
        id:
          $ref: '#/components/schemas/SystemId'
        hostname:
          type: string
          nullable: true
          example: db01.example.com
        display_name:
          type: string
          nullable: true
          example: prod-db
        resolved:
          type: boolean
          nullable: false
          example: false

    UserOut:
      type: object
      additionalProperties: false
      required: [username]
      properties:
        username:
          type: string
          example: jharting@redhat.com
        first_name:
          type: string
          example: Jozef
        last_name:
          type: string
          example: Hartinger


    # Diagnosis specific types
    Diagnosis:
      type: object
      additionalProperties: false
      required: [details, id, insights_id]
      properties:
        id:
          $ref: '#/components/schemas/SystemId'
        insights_id:
          $ref: '#/components/schemas/InsightsId'
        details:
          type: object
          additionalProperties:
            type: object
            description: Arbitrary diagnosis data
          example:
            CVE_2018_1111_dhcp|ERROR_CVE_2018_1111_DHCP_2:
              dhcp_devs:
                - enp0s3
            CVE_2017_5753_4_cpu_kernel|KERNEL_CVE_2017_5753_4_CPU_ERROR_3:
              debugfs_available: true
              dmesg_available: true
              dmesg_wrapped: false

  responses:
    Deleted:
      description: Entity was deleted
    NotFound:
      description: Entity Not Found
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
    MultipleDelete:
      description: Multiple entities were deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MultipleDelete'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
    ServerError:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
    PreconditionFailed:
      description: One or more conditions given in the request header fields evaluated to false

  examples:
    RemediationLinks:
      value:
        first: /api/remediations/v1/remediations?sort=-updated_at&limit=50&offset=0
        last: /api/remediations/v1/remediations?sort=-updated_at&limit=50&offset=50
        next: /api/remediations/v1/remediations?sort=-updated_at&limit=50&offset=50
        previous: null
